name: Linux-X64

on:
  workflow_dispatch

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { title: "linux"         , os: "ubuntu-latest" , cc: "gcc-11"     , arch: "x64", build_type: "Debug"  , defs: "KTHOOK_TEST=ON" }
          - { title: "linux"         , os: "ubuntu-latest" , cc: "gcc-11"     , arch: "x64", build_type: "Release", defs: "KTHOOK_TEST=ON" }
          - { title: "linux"         , os: "ubuntu-latest" , cc: "clang-12"   , arch: "x64", build_type: "Debug"  , defs: "KTHOOK_TEST=ON" }
          - { title: "linux"         , os: "ubuntu-latest" , cc: "clang-12"   , arch: "x64", build_type: "Release", defs: "KTHOOK_TEST=ON" }
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: "${{matrix.title}} (${{matrix.cc}}, ${{matrix.arch}}, ${{matrix.build_type}})"
    runs-on: "${{matrix.os}}"

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
        path: "source"

    - name: "Checkout build-actions"
      run: git clone https://github.com/build-actions/build-actions.git build-actions --depth=1

    - name: "Python"
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"

    - name: "Prepare"
      run: python build-actions/action.py
                  --step=prepare
                  --compiler=${{matrix.cc}}
                  --architecture=${{matrix.arch}}

    - name: "Configure"
      run: python build-actions/action.py
                  --step=configure
                  --config=source/.github/workflows/build-config.json
                  --source-dir=source
                  --compiler=${{matrix.cc}}
                  --architecture=${{matrix.arch}}
                  --build-type=${{matrix.build_type}}
                  --build-defs=${{matrix.defs}}

    - name: "Build"
      run: python build-actions/action.py --step=build

    - name: "Test"
      run: python build-actions/action.py --step=test
